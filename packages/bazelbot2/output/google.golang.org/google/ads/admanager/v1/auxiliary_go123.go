// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

//go:build go1.23

package admanager

import (
	"iter"

	"github.com/googleapis/gax-go/v2/iterator"
	admanagerpb "google.golang.org/genproto/googleapis/ads/admanager/v1"
)

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *AdUnitIterator) All() iter.Seq2[*admanagerpb.AdUnit, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *AdUnitSizeIterator) All() iter.Seq2[*admanagerpb.AdUnitSize, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *CompanyIterator) All() iter.Seq2[*admanagerpb.Company, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *CustomFieldIterator) All() iter.Seq2[*admanagerpb.CustomField, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *CustomTargetingKeyIterator) All() iter.Seq2[*admanagerpb.CustomTargetingKey, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *CustomTargetingValueIterator) All() iter.Seq2[*admanagerpb.CustomTargetingValue, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *EntitySignalsMappingIterator) All() iter.Seq2[*admanagerpb.EntitySignalsMapping, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *OrderIterator) All() iter.Seq2[*admanagerpb.Order, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *PlacementIterator) All() iter.Seq2[*admanagerpb.Placement, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *ReportIterator) All() iter.Seq2[*admanagerpb.Report, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *Report_DataTable_RowIterator) All() iter.Seq2[*admanagerpb.Report_DataTable_Row, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *RoleIterator) All() iter.Seq2[*admanagerpb.Role, error] {
	return iterator.RangeAdapter(it.Next)
}

// All returns an iterator. If an error is returned by the iterator, the
// iterator will stop after that iteration.
func (it *TaxonomyCategoryIterator) All() iter.Seq2[*admanagerpb.TaxonomyCategory, error] {
	return iterator.RangeAdapter(it.Next)
}
