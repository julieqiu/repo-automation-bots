// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: google/ads/admanager/v1/frequency_cap.proto

package admanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a Frequency Cap that can be applied to an entity.
type FrequencyCap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of impressions for this frequency cap.
	MaxImpressions *int64 `protobuf:"varint,1,opt,name=max_impressions,json=maxImpressions,proto3,oneof" json:"max_impressions,omitempty"`
	// The number of time units over which the frequency cap is effective.
	TimeAmount *int64 `protobuf:"varint,2,opt,name=time_amount,json=timeAmount,proto3,oneof" json:"time_amount,omitempty"`
	// The units of time of this frequency cap.
	TimeUnit *TimeUnitEnum_TimeUnit `protobuf:"varint,3,opt,name=time_unit,json=timeUnit,proto3,enum=google.ads.admanager.v1.TimeUnitEnum_TimeUnit,oneof" json:"time_unit,omitempty"`
}

func (x *FrequencyCap) Reset() {
	*x = FrequencyCap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_admanager_v1_frequency_cap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyCap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyCap) ProtoMessage() {}

func (x *FrequencyCap) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_admanager_v1_frequency_cap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyCap.ProtoReflect.Descriptor instead.
func (*FrequencyCap) Descriptor() ([]byte, []int) {
	return file_google_ads_admanager_v1_frequency_cap_proto_rawDescGZIP(), []int{0}
}

func (x *FrequencyCap) GetMaxImpressions() int64 {
	if x != nil && x.MaxImpressions != nil {
		return *x.MaxImpressions
	}
	return 0
}

func (x *FrequencyCap) GetTimeAmount() int64 {
	if x != nil && x.TimeAmount != nil {
		return *x.TimeAmount
	}
	return 0
}

func (x *FrequencyCap) GetTimeUnit() TimeUnitEnum_TimeUnit {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return TimeUnitEnum_TIME_UNIT_UNSPECIFIED
}

var File_google_ads_admanager_v1_frequency_cap_proto protoreflect.FileDescriptor

var file_google_ads_admanager_v1_frequency_cap_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x61, 0x64, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x63, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x2c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x64, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x61, 0x70, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x48, 0x02, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0xc5, 0x01,
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x46,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x40, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x61, 0x64,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0xaa, 0x02, 0x17, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64,
	0x73, 0x2e, 0x41, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x17, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73, 0x5c, 0x41, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x1a, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x3a, 0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x41, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_admanager_v1_frequency_cap_proto_rawDescOnce sync.Once
	file_google_ads_admanager_v1_frequency_cap_proto_rawDescData = file_google_ads_admanager_v1_frequency_cap_proto_rawDesc
)

func file_google_ads_admanager_v1_frequency_cap_proto_rawDescGZIP() []byte {
	file_google_ads_admanager_v1_frequency_cap_proto_rawDescOnce.Do(func() {
		file_google_ads_admanager_v1_frequency_cap_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_admanager_v1_frequency_cap_proto_rawDescData)
	})
	return file_google_ads_admanager_v1_frequency_cap_proto_rawDescData
}

var file_google_ads_admanager_v1_frequency_cap_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_admanager_v1_frequency_cap_proto_goTypes = []any{
	(*FrequencyCap)(nil),       // 0: google.ads.admanager.v1.FrequencyCap
	(TimeUnitEnum_TimeUnit)(0), // 1: google.ads.admanager.v1.TimeUnitEnum.TimeUnit
}
var file_google_ads_admanager_v1_frequency_cap_proto_depIdxs = []int32{
	1, // 0: google.ads.admanager.v1.FrequencyCap.time_unit:type_name -> google.ads.admanager.v1.TimeUnitEnum.TimeUnit
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_ads_admanager_v1_frequency_cap_proto_init() }
func file_google_ads_admanager_v1_frequency_cap_proto_init() {
	if File_google_ads_admanager_v1_frequency_cap_proto != nil {
		return
	}
	file_google_ads_admanager_v1_time_unit_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_google_ads_admanager_v1_frequency_cap_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FrequencyCap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_ads_admanager_v1_frequency_cap_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_admanager_v1_frequency_cap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_admanager_v1_frequency_cap_proto_goTypes,
		DependencyIndexes: file_google_ads_admanager_v1_frequency_cap_proto_depIdxs,
		MessageInfos:      file_google_ads_admanager_v1_frequency_cap_proto_msgTypes,
	}.Build()
	File_google_ads_admanager_v1_frequency_cap_proto = out.File
	file_google_ads_admanager_v1_frequency_cap_proto_rawDesc = nil
	file_google_ads_admanager_v1_frequency_cap_proto_goTypes = nil
	file_google_ads_admanager_v1_frequency_cap_proto_depIdxs = nil
}
