// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: google/ads/admanager/v1/taxonomy_category_messages.proto

package admanager

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The `TaxonomyCategory` resource.
type TaxonomyCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The resource name of the `TaxonomyCategory`.
	// Format: `networks/{network_code}/taxonomyCategories/{taxonomy_category_id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. `TaxonomyCategory` ID.
	TaxonomyCategoryId int64 `protobuf:"varint,2,opt,name=taxonomy_category_id,json=taxonomyCategoryId,proto3" json:"taxonomy_category_id,omitempty"`
	// Output only. Display name of the `TaxonomyCategory`.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Output only. Whether this `TaxonomyCategory` only serves to group its
	// children.
	GroupingOnly bool `protobuf:"varint,5,opt,name=grouping_only,json=groupingOnly,proto3" json:"grouping_only,omitempty"`
	// Output only. The ID of the parent category this `TaxonomyCategory` descends
	// from.
	ParentTaxonomyCategoryId int64 `protobuf:"varint,6,opt,name=parent_taxonomy_category_id,json=parentTaxonomyCategoryId,proto3" json:"parent_taxonomy_category_id,omitempty"`
	// Output only. The taxonomy that this `TaxonomyCategory` belongs to.
	TaxonomyType TaxonomyTypeEnum_TaxonomyType `protobuf:"varint,9,opt,name=taxonomy_type,json=taxonomyType,proto3,enum=google.ads.admanager.v1.TaxonomyTypeEnum_TaxonomyType" json:"taxonomy_type,omitempty"`
	// Output only. The list of names of the ancestors of this `TaxonomyCategory`.
	AncestorNames []string `protobuf:"bytes,7,rep,name=ancestor_names,json=ancestorNames,proto3" json:"ancestor_names,omitempty"`
	// Output only. The list of IDs of the ancestors of this `TaxonomyCategory`.
	AncestorTaxonomyCategoryIds []int64 `protobuf:"varint,8,rep,packed,name=ancestor_taxonomy_category_ids,json=ancestorTaxonomyCategoryIds,proto3" json:"ancestor_taxonomy_category_ids,omitempty"`
}

func (x *TaxonomyCategory) Reset() {
	*x = TaxonomyCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_admanager_v1_taxonomy_category_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxonomyCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxonomyCategory) ProtoMessage() {}

func (x *TaxonomyCategory) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_admanager_v1_taxonomy_category_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxonomyCategory.ProtoReflect.Descriptor instead.
func (*TaxonomyCategory) Descriptor() ([]byte, []int) {
	return file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TaxonomyCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaxonomyCategory) GetTaxonomyCategoryId() int64 {
	if x != nil {
		return x.TaxonomyCategoryId
	}
	return 0
}

func (x *TaxonomyCategory) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *TaxonomyCategory) GetGroupingOnly() bool {
	if x != nil {
		return x.GroupingOnly
	}
	return false
}

func (x *TaxonomyCategory) GetParentTaxonomyCategoryId() int64 {
	if x != nil {
		return x.ParentTaxonomyCategoryId
	}
	return 0
}

func (x *TaxonomyCategory) GetTaxonomyType() TaxonomyTypeEnum_TaxonomyType {
	if x != nil {
		return x.TaxonomyType
	}
	return TaxonomyTypeEnum_TAXONOMY_TYPE_UNSPECIFIED
}

func (x *TaxonomyCategory) GetAncestorNames() []string {
	if x != nil {
		return x.AncestorNames
	}
	return nil
}

func (x *TaxonomyCategory) GetAncestorTaxonomyCategoryIds() []int64 {
	if x != nil {
		return x.AncestorTaxonomyCategoryIds
	}
	return nil
}

var File_google_ads_admanager_v1_taxonomy_category_messages_proto protoreflect.FileDescriptor

var file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDesc = []byte{
	0x0a, 0x38, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x61, 0x64, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x30, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f,
	0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe8, 0x04, 0x0a, 0x10, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x12, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x1b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x18, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x0d,
	0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0c, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x0e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x1e, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x1b, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x73, 0x3a, 0x95, 0x01, 0xea, 0x41, 0x91, 0x01, 0x0a, 0x29, 0x61, 0x64, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x2f, 0x7b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x2f,
	0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x7d, 0x2a, 0x12, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x32, 0x10, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0xd1, 0x01, 0x0a,
	0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x1d, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xaa,
	0x02, 0x17, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73, 0x5c, 0x41, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0xea, 0x02, 0x1a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x41, 0x64,
	0x73, 0x3a, 0x3a, 0x41, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescOnce sync.Once
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescData = file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDesc
)

func file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescGZIP() []byte {
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescOnce.Do(func() {
		file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescData)
	})
	return file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDescData
}

var file_google_ads_admanager_v1_taxonomy_category_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_admanager_v1_taxonomy_category_messages_proto_goTypes = []any{
	(*TaxonomyCategory)(nil),           // 0: google.ads.admanager.v1.TaxonomyCategory
	(TaxonomyTypeEnum_TaxonomyType)(0), // 1: google.ads.admanager.v1.TaxonomyTypeEnum.TaxonomyType
}
var file_google_ads_admanager_v1_taxonomy_category_messages_proto_depIdxs = []int32{
	1, // 0: google.ads.admanager.v1.TaxonomyCategory.taxonomy_type:type_name -> google.ads.admanager.v1.TaxonomyTypeEnum.TaxonomyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_ads_admanager_v1_taxonomy_category_messages_proto_init() }
func file_google_ads_admanager_v1_taxonomy_category_messages_proto_init() {
	if File_google_ads_admanager_v1_taxonomy_category_messages_proto != nil {
		return
	}
	file_google_ads_admanager_v1_taxonomy_type_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_google_ads_admanager_v1_taxonomy_category_messages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TaxonomyCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_admanager_v1_taxonomy_category_messages_proto_goTypes,
		DependencyIndexes: file_google_ads_admanager_v1_taxonomy_category_messages_proto_depIdxs,
		MessageInfos:      file_google_ads_admanager_v1_taxonomy_category_messages_proto_msgTypes,
	}.Build()
	File_google_ads_admanager_v1_taxonomy_category_messages_proto = out.File
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_rawDesc = nil
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_goTypes = nil
	file_google_ads_admanager_v1_taxonomy_category_messages_proto_depIdxs = nil
}
