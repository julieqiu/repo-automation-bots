// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: google/cloud/eventarc/logging/v1/enrollment_activity.proto

package loggingpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Logged during the processing of an enrollment on an event in a message bus.
type EnrollmentActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique system generated ID associated with the event passed from the
	// message bus.
	MessageUid string `protobuf:"bytes,1,opt,name=message_uid,json=messageUid,proto3" json:"message_uid,omitempty"`
	// The CloudEvent ID and source from the attributes of the event.
	Attributes map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The point in time when the activity occurred.
	ActivityTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=activity_time,json=activityTime,proto3" json:"activity_time,omitempty"`
	// One of the activities that can be logged during the processing of an
	// enrollment.
	//
	// Types that are assignable to Activity:
	//
	//	*EnrollmentActivity_Matched_
	Activity isEnrollmentActivity_Activity `protobuf_oneof:"activity"`
}

func (x *EnrollmentActivity) Reset() {
	*x = EnrollmentActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentActivity) ProtoMessage() {}

func (x *EnrollmentActivity) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentActivity.ProtoReflect.Descriptor instead.
func (*EnrollmentActivity) Descriptor() ([]byte, []int) {
	return file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescGZIP(), []int{0}
}

func (x *EnrollmentActivity) GetMessageUid() string {
	if x != nil {
		return x.MessageUid
	}
	return ""
}

func (x *EnrollmentActivity) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *EnrollmentActivity) GetActivityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivityTime
	}
	return nil
}

func (m *EnrollmentActivity) GetActivity() isEnrollmentActivity_Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (x *EnrollmentActivity) GetMatched() *EnrollmentActivity_Matched {
	if x, ok := x.GetActivity().(*EnrollmentActivity_Matched_); ok {
		return x.Matched
	}
	return nil
}

type isEnrollmentActivity_Activity interface {
	isEnrollmentActivity_Activity()
}

type EnrollmentActivity_Matched_ struct {
	// Logged when an event matches an enrollment.
	Matched *EnrollmentActivity_Matched `protobuf:"bytes,4,opt,name=matched,proto3,oneof"`
}

func (*EnrollmentActivity_Matched_) isEnrollmentActivity_Activity() {}

// Structured log message that is emitted when an event matches an enrollment.
type EnrollmentActivity_Matched struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Informational details about the matched event.
	Details string `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	// The destination this enrollment is matched to, such as the name of the
	// pipeline.
	EventDestination string `protobuf:"bytes,2,opt,name=event_destination,json=eventDestination,proto3" json:"event_destination,omitempty"`
	// Logged when the enrollment encounters an error.
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EnrollmentActivity_Matched) Reset() {
	*x = EnrollmentActivity_Matched{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentActivity_Matched) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentActivity_Matched) ProtoMessage() {}

func (x *EnrollmentActivity_Matched) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentActivity_Matched.ProtoReflect.Descriptor instead.
func (*EnrollmentActivity_Matched) Descriptor() ([]byte, []int) {
	return file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EnrollmentActivity_Matched) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *EnrollmentActivity_Matched) GetEventDestination() string {
	if x != nil {
		return x.EventDestination
	}
	return ""
}

func (x *EnrollmentActivity_Matched) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_google_cloud_eventarc_logging_v1_enrollment_activity_proto protoreflect.FileDescriptor

var file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x63, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x04, 0x0a, 0x12, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xe2, 0x8c, 0xcf, 0xd7, 0x08, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x55, 0x69, 0x64, 0x12, 0x64, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x63, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x58,
	0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x1a, 0x7a, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42,
	0xee, 0x01, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x61, 0x72,
	0x63, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x3b, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0xaa, 0x02, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x5c, 0x4c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x24, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x63, 0x3a, 0x3a, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescOnce sync.Once
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescData = file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDesc
)

func file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescGZIP() []byte {
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescOnce.Do(func() {
		file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescData)
	})
	return file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDescData
}

var file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_goTypes = []any{
	(*EnrollmentActivity)(nil),         // 0: google.cloud.eventarc.logging.v1.EnrollmentActivity
	(*EnrollmentActivity_Matched)(nil), // 1: google.cloud.eventarc.logging.v1.EnrollmentActivity.Matched
	nil,                                // 2: google.cloud.eventarc.logging.v1.EnrollmentActivity.AttributesEntry
	(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
	(*status.Status)(nil),              // 4: google.rpc.Status
}
var file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_depIdxs = []int32{
	2, // 0: google.cloud.eventarc.logging.v1.EnrollmentActivity.attributes:type_name -> google.cloud.eventarc.logging.v1.EnrollmentActivity.AttributesEntry
	3, // 1: google.cloud.eventarc.logging.v1.EnrollmentActivity.activity_time:type_name -> google.protobuf.Timestamp
	1, // 2: google.cloud.eventarc.logging.v1.EnrollmentActivity.matched:type_name -> google.cloud.eventarc.logging.v1.EnrollmentActivity.Matched
	4, // 3: google.cloud.eventarc.logging.v1.EnrollmentActivity.Matched.error:type_name -> google.rpc.Status
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_init() }
func file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_init() {
	if File_google_cloud_eventarc_logging_v1_enrollment_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EnrollmentActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EnrollmentActivity_Matched); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes[0].OneofWrappers = []any{
		(*EnrollmentActivity_Matched_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_goTypes,
		DependencyIndexes: file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_depIdxs,
		MessageInfos:      file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_msgTypes,
	}.Build()
	File_google_cloud_eventarc_logging_v1_enrollment_activity_proto = out.File
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_rawDesc = nil
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_goTypes = nil
	file_google_cloud_eventarc_logging_v1_enrollment_activity_proto_depIdxs = nil
}
