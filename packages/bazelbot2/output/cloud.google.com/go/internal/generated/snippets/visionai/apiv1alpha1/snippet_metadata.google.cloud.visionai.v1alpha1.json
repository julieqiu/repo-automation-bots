{
  "clientLibrary": {
    "name": "cloud.google.com/go/visionai/apiv1alpha1",
    "version": "$VERSION",
    "language": "GO",
    "apis": [
      {
        "id": "google.cloud.visionai.v1alpha1",
        "version": "v1alpha1"
      }
    ]
  },
  "snippets": [
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_AddApplicationStreamInput_sync",
      "title": "visionai AddApplicationStreamInput Sample",
      "description": "AddApplicationStreamInput adds target stream input to the Application.\nIf the Application is deployed, the corresponding new Application instance\nwill be created. If the stream has already been in the Application, the RPC\nwill fail.",
      "file": "AppPlatformClient/AddApplicationStreamInput/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "AddApplicationStreamInput",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.AddApplicationStreamInput",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.AddApplicationStreamInputRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "AddApplicationStreamInputOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "AddApplicationStreamInput",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.AddApplicationStreamInput",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_CancelOperation_sync",
      "title": "visionai CancelOperation Sample",
      "description": "CancelOperation is a utility method from google.longrunning.Operations.",
      "file": "AppPlatformClient/CancelOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CancelOperation",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.CancelOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.CancelOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "CancelOperation",
          "fullName": "google.longrunning.Operations.CancelOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_CreateApplication_sync",
      "title": "visionai CreateApplication Sample",
      "description": "CreateApplication creates a new Application in a given project and location.",
      "file": "AppPlatformClient/CreateApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.CreateApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateApplicationOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "CreateApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.CreateApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_CreateApplicationInstances_sync",
      "title": "visionai CreateApplicationInstances Sample",
      "description": "CreateApplicationInstances adds target stream input to the Application.\nIf the Application is deployed, the corresponding new Application instance\nwill be created. If the stream has already been in the Application, the RPC\nwill fail.",
      "file": "AppPlatformClient/CreateApplicationInstances/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateApplicationInstances",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.CreateApplicationInstances",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateApplicationInstancesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateApplicationInstancesOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "CreateApplicationInstances",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.CreateApplicationInstances",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_CreateDraft_sync",
      "title": "visionai CreateDraft Sample",
      "description": "CreateDraft creates a new Draft in a given project and location.",
      "file": "AppPlatformClient/CreateDraft/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateDraft",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.CreateDraft",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateDraftRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateDraftOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "CreateDraft",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.CreateDraft",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_CreateProcessor_sync",
      "title": "visionai CreateProcessor Sample",
      "description": "CreateProcessor creates a new Processor in a given project and location.",
      "file": "AppPlatformClient/CreateProcessor/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateProcessor",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.CreateProcessor",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateProcessorRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateProcessorOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "CreateProcessor",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.CreateProcessor",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeleteApplication_sync",
      "title": "visionai DeleteApplication Sample",
      "description": "DeleteApplication deletes a single Application.",
      "file": "AppPlatformClient/DeleteApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeleteApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteApplicationOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeleteApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.DeleteApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeleteApplicationInstances_sync",
      "title": "visionai DeleteApplicationInstances Sample",
      "description": "DeleteApplicationInstances remove target stream input to the Application, if the Application is\ndeployed, the corresponding instance based will be deleted. If the stream\nis not in the Application, the RPC will fail.",
      "file": "AppPlatformClient/DeleteApplicationInstances/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteApplicationInstances",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeleteApplicationInstances",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteApplicationInstancesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteApplicationInstancesOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeleteApplicationInstances",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.DeleteApplicationInstances",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeleteDraft_sync",
      "title": "visionai DeleteDraft Sample",
      "description": "DeleteDraft deletes a single Draft.",
      "file": "AppPlatformClient/DeleteDraft/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteDraft",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeleteDraft",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteDraftRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteDraftOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeleteDraft",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.DeleteDraft",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeleteOperation_sync",
      "title": "visionai DeleteOperation Sample",
      "description": "DeleteOperation is a utility method from google.longrunning.Operations.",
      "file": "AppPlatformClient/DeleteOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteOperation",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeleteOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.DeleteOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeleteOperation",
          "fullName": "google.longrunning.Operations.DeleteOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeleteProcessor_sync",
      "title": "visionai DeleteProcessor Sample",
      "description": "DeleteProcessor deletes a single Processor.",
      "file": "AppPlatformClient/DeleteProcessor/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteProcessor",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeleteProcessor",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteProcessorRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteProcessorOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeleteProcessor",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.DeleteProcessor",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_DeployApplication_sync",
      "title": "visionai DeployApplication Sample",
      "description": "DeployApplication deploys a single Application.",
      "file": "AppPlatformClient/DeployApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeployApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.DeployApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeployApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeployApplicationOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "DeployApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.DeployApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetApplication_sync",
      "title": "visionai GetApplication Sample",
      "description": "GetApplication gets details of a single Application.",
      "file": "AppPlatformClient/GetApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Application",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.GetApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetDraft_sync",
      "title": "visionai GetDraft Sample",
      "description": "GetDraft gets details of a single Draft.",
      "file": "AppPlatformClient/GetDraft/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetDraft",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetDraft",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetDraftRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Draft",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetDraft",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.GetDraft",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetIamPolicy_sync",
      "title": "visionai GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a resource. Returns an empty policy\nif the resource exists and does not have a policy set.",
      "file": "AppPlatformClient/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.GetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetInstance_sync",
      "title": "visionai GetInstance Sample",
      "description": "GetInstance gets details of a single Instance.",
      "file": "AppPlatformClient/GetInstance/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetInstance",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetInstance",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetInstanceRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Instance",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetInstance",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.GetInstance",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetLocation_sync",
      "title": "visionai GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "AppPlatformClient/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetOperation_sync",
      "title": "visionai GetOperation Sample",
      "description": "GetOperation is a utility method from google.longrunning.Operations.",
      "file": "AppPlatformClient/GetOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetOperation",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.GetOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*longrunningpb.Operation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetOperation",
          "fullName": "google.longrunning.Operations.GetOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_GetProcessor_sync",
      "title": "visionai GetProcessor Sample",
      "description": "GetProcessor gets details of a single Processor.",
      "file": "AppPlatformClient/GetProcessor/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetProcessor",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.GetProcessor",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetProcessorRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Processor",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "GetProcessor",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.GetProcessor",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListApplications_sync",
      "title": "visionai ListApplications Sample",
      "description": "ListApplications lists Applications in a given project and location.",
      "file": "AppPlatformClient/ListApplications/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListApplications",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListApplications",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListApplicationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "ApplicationIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListApplications",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.ListApplications",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListDrafts_sync",
      "title": "visionai ListDrafts Sample",
      "description": "ListDrafts lists Drafts in a given project and location.",
      "file": "AppPlatformClient/ListDrafts/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListDrafts",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListDrafts",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListDraftsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DraftIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListDrafts",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.ListDrafts",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListInstances_sync",
      "title": "visionai ListInstances Sample",
      "description": "ListInstances lists Instances in a given project and location.",
      "file": "AppPlatformClient/ListInstances/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListInstances",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListInstances",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListInstancesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "InstanceIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListInstances",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.ListInstances",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListLocations_sync",
      "title": "visionai ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "AppPlatformClient/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListOperations_sync",
      "title": "visionai ListOperations Sample",
      "description": "ListOperations is a utility method from google.longrunning.Operations.",
      "file": "AppPlatformClient/ListOperations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListOperations",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListOperations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.ListOperationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "OperationIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListOperations",
          "fullName": "google.longrunning.Operations.ListOperations",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListPrebuiltProcessors_sync",
      "title": "visionai ListPrebuiltProcessors Sample",
      "description": "ListPrebuiltProcessors listPrebuiltProcessors is a custom pass-through verb that Lists Prebuilt\nProcessors.",
      "file": "AppPlatformClient/ListPrebuiltProcessors/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListPrebuiltProcessors",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListPrebuiltProcessors",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListPrebuiltProcessorsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.ListPrebuiltProcessorsResponse",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListPrebuiltProcessors",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.ListPrebuiltProcessors",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_ListProcessors_sync",
      "title": "visionai ListProcessors Sample",
      "description": "ListProcessors lists Processors in a given project and location.",
      "file": "AppPlatformClient/ListProcessors/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListProcessors",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.ListProcessors",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListProcessorsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "ProcessorIterator",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "ListProcessors",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.ListProcessors",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_RemoveApplicationStreamInput_sync",
      "title": "visionai RemoveApplicationStreamInput Sample",
      "description": "RemoveApplicationStreamInput remove target stream input to the Application, if the Application is\ndeployed, the corresponding instance based will be deleted. If the stream\nis not in the Application, the RPC will fail.",
      "file": "AppPlatformClient/RemoveApplicationStreamInput/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "RemoveApplicationStreamInput",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.RemoveApplicationStreamInput",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.RemoveApplicationStreamInputRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "RemoveApplicationStreamInputOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "RemoveApplicationStreamInput",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.RemoveApplicationStreamInput",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_SetIamPolicy_sync",
      "title": "visionai SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy on the specified resource. Replaces\nany existing policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\nerrors.",
      "file": "AppPlatformClient/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.SetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_TestIamPermissions_sync",
      "title": "visionai TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on the specified resource. If the\nresource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for authorization\nchecking. This operation may \"fail open\" without warning.",
      "file": "AppPlatformClient/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.iam.v1.IAMPolicy.TestIamPermissions",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UndeployApplication_sync",
      "title": "visionai UndeployApplication Sample",
      "description": "UndeployApplication undeploys a single Application.",
      "file": "AppPlatformClient/UndeployApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UndeployApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UndeployApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UndeployApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UndeployApplicationOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UndeployApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UndeployApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UpdateApplication_sync",
      "title": "visionai UpdateApplication Sample",
      "description": "UpdateApplication updates the parameters of a single Application.",
      "file": "AppPlatformClient/UpdateApplication/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateApplication",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UpdateApplication",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateApplicationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateApplicationOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UpdateApplication",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UpdateApplication",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UpdateApplicationInstances_sync",
      "title": "visionai UpdateApplicationInstances Sample",
      "description": "UpdateApplicationInstances adds target stream input to the Application.\nIf the Application is deployed, the corresponding new Application instance\nwill be created. If the stream has already been in the Application, the RPC\nwill fail.",
      "file": "AppPlatformClient/UpdateApplicationInstances/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateApplicationInstances",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UpdateApplicationInstances",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateApplicationInstancesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateApplicationInstancesOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UpdateApplicationInstances",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UpdateApplicationInstances",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UpdateApplicationStreamInput_sync",
      "title": "visionai UpdateApplicationStreamInput Sample",
      "description": "UpdateApplicationStreamInput update target stream input to the Application, if the Application is\ndeployed, the corresponding instance based will be deployed. For\nCreateOrUpdate behavior, set allow_missing to true.",
      "file": "AppPlatformClient/UpdateApplicationStreamInput/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateApplicationStreamInput",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UpdateApplicationStreamInput",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateApplicationStreamInputRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateApplicationStreamInputOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UpdateApplicationStreamInput",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UpdateApplicationStreamInput",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UpdateDraft_sync",
      "title": "visionai UpdateDraft Sample",
      "description": "UpdateDraft updates the parameters of a single Draft.",
      "file": "AppPlatformClient/UpdateDraft/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateDraft",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UpdateDraft",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateDraftRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateDraftOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UpdateDraft",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UpdateDraft",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_AppPlatform_UpdateProcessor_sync",
      "title": "visionai UpdateProcessor Sample",
      "description": "UpdateProcessor updates the parameters of a single Processor.",
      "file": "AppPlatformClient/UpdateProcessor/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateProcessor",
        "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient.UpdateProcessor",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateProcessorRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateProcessorOperation",
        "client": {
          "shortName": "AppPlatformClient",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatformClient"
        },
        "method": {
          "shortName": "UpdateProcessor",
          "fullName": "google.cloud.visionai.v1alpha1.AppPlatform.UpdateProcessor",
          "service": {
            "shortName": "AppPlatform",
            "fullName": "google.cloud.visionai.v1alpha1.AppPlatform"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_CancelOperation_sync",
      "title": "visionai CancelOperation Sample",
      "description": "CancelOperation is a utility method from google.longrunning.Operations.",
      "file": "LiveVideoAnalyticsClient/CancelOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CancelOperation",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.CancelOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.CancelOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "CancelOperation",
          "fullName": "google.longrunning.Operations.CancelOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_CreateAnalysis_sync",
      "title": "visionai CreateAnalysis Sample",
      "description": "CreateAnalysis creates a new Analysis in a given project and location.",
      "file": "LiveVideoAnalyticsClient/CreateAnalysis/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateAnalysis",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.CreateAnalysis",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateAnalysisRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateAnalysisOperation",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "CreateAnalysis",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics.CreateAnalysis",
          "service": {
            "shortName": "LiveVideoAnalytics",
            "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_DeleteAnalysis_sync",
      "title": "visionai DeleteAnalysis Sample",
      "description": "DeleteAnalysis deletes a single Analysis.",
      "file": "LiveVideoAnalyticsClient/DeleteAnalysis/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteAnalysis",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.DeleteAnalysis",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteAnalysisRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteAnalysisOperation",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "DeleteAnalysis",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics.DeleteAnalysis",
          "service": {
            "shortName": "LiveVideoAnalytics",
            "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_DeleteOperation_sync",
      "title": "visionai DeleteOperation Sample",
      "description": "DeleteOperation is a utility method from google.longrunning.Operations.",
      "file": "LiveVideoAnalyticsClient/DeleteOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteOperation",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.DeleteOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.DeleteOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "DeleteOperation",
          "fullName": "google.longrunning.Operations.DeleteOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_GetAnalysis_sync",
      "title": "visionai GetAnalysis Sample",
      "description": "GetAnalysis gets details of a single Analysis.",
      "file": "LiveVideoAnalyticsClient/GetAnalysis/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetAnalysis",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.GetAnalysis",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetAnalysisRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Analysis",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "GetAnalysis",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics.GetAnalysis",
          "service": {
            "shortName": "LiveVideoAnalytics",
            "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_GetIamPolicy_sync",
      "title": "visionai GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a resource. Returns an empty policy\nif the resource exists and does not have a policy set.",
      "file": "LiveVideoAnalyticsClient/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.GetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_GetLocation_sync",
      "title": "visionai GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "LiveVideoAnalyticsClient/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_GetOperation_sync",
      "title": "visionai GetOperation Sample",
      "description": "GetOperation is a utility method from google.longrunning.Operations.",
      "file": "LiveVideoAnalyticsClient/GetOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetOperation",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.GetOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.GetOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*longrunningpb.Operation",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "GetOperation",
          "fullName": "google.longrunning.Operations.GetOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_ListAnalyses_sync",
      "title": "visionai ListAnalyses Sample",
      "description": "ListAnalyses lists Analyses in a given project and location.",
      "file": "LiveVideoAnalyticsClient/ListAnalyses/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListAnalyses",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.ListAnalyses",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListAnalysesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "AnalysisIterator",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "ListAnalyses",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics.ListAnalyses",
          "service": {
            "shortName": "LiveVideoAnalytics",
            "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_ListLocations_sync",
      "title": "visionai ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "LiveVideoAnalyticsClient/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_ListOperations_sync",
      "title": "visionai ListOperations Sample",
      "description": "ListOperations is a utility method from google.longrunning.Operations.",
      "file": "LiveVideoAnalyticsClient/ListOperations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListOperations",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.ListOperations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.ListOperationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "OperationIterator",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "ListOperations",
          "fullName": "google.longrunning.Operations.ListOperations",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_SetIamPolicy_sync",
      "title": "visionai SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy on the specified resource. Replaces\nany existing policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\nerrors.",
      "file": "LiveVideoAnalyticsClient/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.SetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_TestIamPermissions_sync",
      "title": "visionai TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on the specified resource. If the\nresource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for authorization\nchecking. This operation may \"fail open\" without warning.",
      "file": "LiveVideoAnalyticsClient/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.iam.v1.IAMPolicy.TestIamPermissions",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_LiveVideoAnalytics_UpdateAnalysis_sync",
      "title": "visionai UpdateAnalysis Sample",
      "description": "UpdateAnalysis updates the parameters of a single Analysis.",
      "file": "LiveVideoAnalyticsClient/UpdateAnalysis/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateAnalysis",
        "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient.UpdateAnalysis",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateAnalysisRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateAnalysisOperation",
        "client": {
          "shortName": "LiveVideoAnalyticsClient",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalyticsClient"
        },
        "method": {
          "shortName": "UpdateAnalysis",
          "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics.UpdateAnalysis",
          "service": {
            "shortName": "LiveVideoAnalytics",
            "fullName": "google.cloud.visionai.v1alpha1.LiveVideoAnalytics"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_AcquireLease_sync",
      "title": "visionai AcquireLease Sample",
      "description": "AcquireLease acquireLease acquires a lease.",
      "file": "StreamingClient/AcquireLease/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "AcquireLease",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.AcquireLease",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.AcquireLeaseRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Lease",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "AcquireLease",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.AcquireLease",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_CancelOperation_sync",
      "title": "visionai CancelOperation Sample",
      "description": "CancelOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamingClient/CancelOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CancelOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.CancelOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.CancelOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "CancelOperation",
          "fullName": "google.longrunning.Operations.CancelOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_DeleteOperation_sync",
      "title": "visionai DeleteOperation Sample",
      "description": "DeleteOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamingClient/DeleteOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.DeleteOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.DeleteOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "DeleteOperation",
          "fullName": "google.longrunning.Operations.DeleteOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_GetIamPolicy_sync",
      "title": "visionai GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a resource. Returns an empty policy\nif the resource exists and does not have a policy set.",
      "file": "StreamingClient/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.GetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_GetLocation_sync",
      "title": "visionai GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "StreamingClient/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_GetOperation_sync",
      "title": "visionai GetOperation Sample",
      "description": "GetOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamingClient/GetOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.GetOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.GetOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*longrunningpb.Operation",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "GetOperation",
          "fullName": "google.longrunning.Operations.GetOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_ListLocations_sync",
      "title": "visionai ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "StreamingClient/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_ListOperations_sync",
      "title": "visionai ListOperations Sample",
      "description": "ListOperations is a utility method from google.longrunning.Operations.",
      "file": "StreamingClient/ListOperations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListOperations",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.ListOperations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.ListOperationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "OperationIterator",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "ListOperations",
          "fullName": "google.longrunning.Operations.ListOperations",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_ReceiveEvents_sync",
      "title": "visionai ReceiveEvents Sample",
      "description": "ReceiveEvents receive events given the stream name.\n\n\nThis method is not supported for the REST transport.",
      "file": "StreamingClient/ReceiveEvents/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ReceiveEvents",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.ReceiveEvents",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "visionaipb.StreamingService_ReceiveEventsClient",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "ReceiveEvents",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.ReceiveEvents",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 69,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_ReceivePackets_sync",
      "title": "visionai ReceivePackets Sample",
      "description": "ReceivePackets receive packets from the series.\n\n\nThis method is not supported for the REST transport.",
      "file": "StreamingClient/ReceivePackets/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ReceivePackets",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.ReceivePackets",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "visionaipb.StreamingService_ReceivePacketsClient",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "ReceivePackets",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.ReceivePackets",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 69,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_ReleaseLease_sync",
      "title": "visionai ReleaseLease Sample",
      "description": "ReleaseLease rleaseLease releases a lease.",
      "file": "StreamingClient/ReleaseLease/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ReleaseLease",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.ReleaseLease",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ReleaseLeaseRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.ReleaseLeaseResponse",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "ReleaseLease",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.ReleaseLease",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_RenewLease_sync",
      "title": "visionai RenewLease Sample",
      "description": "RenewLease renewLease renews a lease.",
      "file": "StreamingClient/RenewLease/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "RenewLease",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.RenewLease",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.RenewLeaseRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Lease",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "RenewLease",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.RenewLease",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_SendPackets_sync",
      "title": "visionai SendPackets Sample",
      "description": "SendPackets send packets to the series.\n\n\nThis method is not supported for the REST transport.",
      "file": "StreamingClient/SendPackets/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SendPackets",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.SendPackets",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "visionaipb.StreamingService_SendPacketsClient",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "SendPackets",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingService.SendPackets",
          "service": {
            "shortName": "StreamingService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamingService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 69,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_SetIamPolicy_sync",
      "title": "visionai SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy on the specified resource. Replaces\nany existing policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\nerrors.",
      "file": "StreamingClient/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.SetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamingService_TestIamPermissions_sync",
      "title": "visionai TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on the specified resource. If the\nresource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for authorization\nchecking. This operation may \"fail open\" without warning.",
      "file": "StreamingClient/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.visionai.v1alpha1.StreamingClient.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "StreamingClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamingClient"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.iam.v1.IAMPolicy.TestIamPermissions",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_CancelOperation_sync",
      "title": "visionai CancelOperation Sample",
      "description": "CancelOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamsClient/CancelOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CancelOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.CancelOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.CancelOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "CancelOperation",
          "fullName": "google.longrunning.Operations.CancelOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_CreateCluster_sync",
      "title": "visionai CreateCluster Sample",
      "description": "CreateCluster creates a new Cluster in a given project and location.",
      "file": "StreamsClient/CreateCluster/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateCluster",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.CreateCluster",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateClusterRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateClusterOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "CreateCluster",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.CreateCluster",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_CreateEvent_sync",
      "title": "visionai CreateEvent Sample",
      "description": "CreateEvent creates a new Event in a given project and location.",
      "file": "StreamsClient/CreateEvent/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateEvent",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.CreateEvent",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateEventRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateEventOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "CreateEvent",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.CreateEvent",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_CreateSeries_sync",
      "title": "visionai CreateSeries Sample",
      "description": "CreateSeries creates a new Series in a given project and location.",
      "file": "StreamsClient/CreateSeries/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateSeries",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.CreateSeries",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateSeriesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateSeriesOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "CreateSeries",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.CreateSeries",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_CreateStream_sync",
      "title": "visionai CreateStream Sample",
      "description": "CreateStream creates a new Stream in a given project and location.",
      "file": "StreamsClient/CreateStream/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateStream",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.CreateStream",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateStreamRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateStreamOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "CreateStream",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.CreateStream",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_DeleteCluster_sync",
      "title": "visionai DeleteCluster Sample",
      "description": "DeleteCluster deletes a single Cluster.",
      "file": "StreamsClient/DeleteCluster/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteCluster",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.DeleteCluster",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteClusterRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteClusterOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "DeleteCluster",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.DeleteCluster",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_DeleteEvent_sync",
      "title": "visionai DeleteEvent Sample",
      "description": "DeleteEvent deletes a single Event.",
      "file": "StreamsClient/DeleteEvent/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteEvent",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.DeleteEvent",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteEventRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteEventOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "DeleteEvent",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.DeleteEvent",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_DeleteOperation_sync",
      "title": "visionai DeleteOperation Sample",
      "description": "DeleteOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamsClient/DeleteOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.DeleteOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.DeleteOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "DeleteOperation",
          "fullName": "google.longrunning.Operations.DeleteOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_DeleteSeries_sync",
      "title": "visionai DeleteSeries Sample",
      "description": "DeleteSeries deletes a single Series.",
      "file": "StreamsClient/DeleteSeries/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteSeries",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.DeleteSeries",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteSeriesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteSeriesOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "DeleteSeries",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.DeleteSeries",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_DeleteStream_sync",
      "title": "visionai DeleteStream Sample",
      "description": "DeleteStream deletes a single Stream.",
      "file": "StreamsClient/DeleteStream/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteStream",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.DeleteStream",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteStreamRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteStreamOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "DeleteStream",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.DeleteStream",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GenerateStreamHlsToken_sync",
      "title": "visionai GenerateStreamHlsToken Sample",
      "description": "GenerateStreamHlsToken generate the JWT auth token required to get the stream HLS contents.",
      "file": "StreamsClient/GenerateStreamHlsToken/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GenerateStreamHlsToken",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GenerateStreamHlsToken",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GenerateStreamHlsTokenRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.GenerateStreamHlsTokenResponse",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GenerateStreamHlsToken",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.GenerateStreamHlsToken",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetCluster_sync",
      "title": "visionai GetCluster Sample",
      "description": "GetCluster gets details of a single Cluster.",
      "file": "StreamsClient/GetCluster/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetCluster",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetCluster",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetClusterRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Cluster",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetCluster",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.GetCluster",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetEvent_sync",
      "title": "visionai GetEvent Sample",
      "description": "GetEvent gets details of a single Event.",
      "file": "StreamsClient/GetEvent/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetEvent",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetEvent",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetEventRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Event",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetEvent",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.GetEvent",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetIamPolicy_sync",
      "title": "visionai GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a resource. Returns an empty policy\nif the resource exists and does not have a policy set.",
      "file": "StreamsClient/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.GetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetLocation_sync",
      "title": "visionai GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "StreamsClient/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetOperation_sync",
      "title": "visionai GetOperation Sample",
      "description": "GetOperation is a utility method from google.longrunning.Operations.",
      "file": "StreamsClient/GetOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetOperation",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.GetOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*longrunningpb.Operation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetOperation",
          "fullName": "google.longrunning.Operations.GetOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetSeries_sync",
      "title": "visionai GetSeries Sample",
      "description": "GetSeries gets details of a single Series.",
      "file": "StreamsClient/GetSeries/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetSeries",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetSeries",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetSeriesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Series",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetSeries",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.GetSeries",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_GetStream_sync",
      "title": "visionai GetStream Sample",
      "description": "GetStream gets details of a single Stream.",
      "file": "StreamsClient/GetStream/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetStream",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.GetStream",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetStreamRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Stream",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "GetStream",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.GetStream",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListClusters_sync",
      "title": "visionai ListClusters Sample",
      "description": "ListClusters lists Clusters in a given project and location.",
      "file": "StreamsClient/ListClusters/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListClusters",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListClusters",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListClustersRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "ClusterIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListClusters",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.ListClusters",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListEvents_sync",
      "title": "visionai ListEvents Sample",
      "description": "ListEvents lists Events in a given project and location.",
      "file": "StreamsClient/ListEvents/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListEvents",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListEvents",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListEventsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "EventIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListEvents",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.ListEvents",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListLocations_sync",
      "title": "visionai ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "StreamsClient/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListOperations_sync",
      "title": "visionai ListOperations Sample",
      "description": "ListOperations is a utility method from google.longrunning.Operations.",
      "file": "StreamsClient/ListOperations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListOperations",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListOperations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.ListOperationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "OperationIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListOperations",
          "fullName": "google.longrunning.Operations.ListOperations",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListSeries_sync",
      "title": "visionai ListSeries Sample",
      "description": "ListSeries lists Series in a given project and location.",
      "file": "StreamsClient/ListSeries/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListSeries",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListSeries",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListSeriesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "SeriesIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListSeries",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.ListSeries",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_ListStreams_sync",
      "title": "visionai ListStreams Sample",
      "description": "ListStreams lists Streams in a given project and location.",
      "file": "StreamsClient/ListStreams/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListStreams",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.ListStreams",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListStreamsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "StreamIterator",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "ListStreams",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.ListStreams",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_MaterializeChannel_sync",
      "title": "visionai MaterializeChannel Sample",
      "description": "MaterializeChannel materialize a channel.",
      "file": "StreamsClient/MaterializeChannel/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "MaterializeChannel",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.MaterializeChannel",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.MaterializeChannelRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "MaterializeChannelOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "MaterializeChannel",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.MaterializeChannel",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_SetIamPolicy_sync",
      "title": "visionai SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy on the specified resource. Replaces\nany existing policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\nerrors.",
      "file": "StreamsClient/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.SetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_TestIamPermissions_sync",
      "title": "visionai TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on the specified resource. If the\nresource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for authorization\nchecking. This operation may \"fail open\" without warning.",
      "file": "StreamsClient/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.iam.v1.IAMPolicy.TestIamPermissions",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_UpdateCluster_sync",
      "title": "visionai UpdateCluster Sample",
      "description": "UpdateCluster updates the parameters of a single Cluster.",
      "file": "StreamsClient/UpdateCluster/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateCluster",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.UpdateCluster",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateClusterRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateClusterOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "UpdateCluster",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.UpdateCluster",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_UpdateEvent_sync",
      "title": "visionai UpdateEvent Sample",
      "description": "UpdateEvent updates the parameters of a single Event.",
      "file": "StreamsClient/UpdateEvent/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateEvent",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.UpdateEvent",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateEventRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateEventOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "UpdateEvent",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.UpdateEvent",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_UpdateSeries_sync",
      "title": "visionai UpdateSeries Sample",
      "description": "UpdateSeries updates the parameters of a single Event.",
      "file": "StreamsClient/UpdateSeries/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateSeries",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.UpdateSeries",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateSeriesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateSeriesOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "UpdateSeries",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.UpdateSeries",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_StreamsService_UpdateStream_sync",
      "title": "visionai UpdateStream Sample",
      "description": "UpdateStream updates the parameters of a single Stream.",
      "file": "StreamsClient/UpdateStream/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateStream",
        "fullName": "google.cloud.visionai.v1alpha1.StreamsClient.UpdateStream",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateStreamRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "UpdateStreamOperation",
        "client": {
          "shortName": "StreamsClient",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsClient"
        },
        "method": {
          "shortName": "UpdateStream",
          "fullName": "google.cloud.visionai.v1alpha1.StreamsService.UpdateStream",
          "service": {
            "shortName": "StreamsService",
            "fullName": "google.cloud.visionai.v1alpha1.StreamsService"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CancelOperation_sync",
      "title": "visionai CancelOperation Sample",
      "description": "CancelOperation is a utility method from google.longrunning.Operations.",
      "file": "WarehouseClient/CancelOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CancelOperation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CancelOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.CancelOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CancelOperation",
          "fullName": "google.longrunning.Operations.CancelOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ClipAsset_sync",
      "title": "visionai ClipAsset Sample",
      "description": "ClipAsset generates clips for downloading. The api takes in a time range, and\ngenerates a clip of the first content available after start_time and\nbefore end_time, which may overflow beyond these bounds.\nReturned clips are truncated if the total size of the clips are larger\nthan 100MB.",
      "file": "WarehouseClient/ClipAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ClipAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ClipAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ClipAssetRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.ClipAssetResponse",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ClipAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ClipAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CreateAnnotation_sync",
      "title": "visionai CreateAnnotation Sample",
      "description": "CreateAnnotation creates annotation inside asset.",
      "file": "WarehouseClient/CreateAnnotation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateAnnotation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CreateAnnotation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateAnnotationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Annotation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CreateAnnotation",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.CreateAnnotation",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CreateAsset_sync",
      "title": "visionai CreateAsset Sample",
      "description": "CreateAsset creates an asset inside corpus.",
      "file": "WarehouseClient/CreateAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CreateAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateAssetRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Asset",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CreateAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.CreateAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CreateCorpus_sync",
      "title": "visionai CreateCorpus Sample",
      "description": "CreateCorpus creates a corpus inside a project.",
      "file": "WarehouseClient/CreateCorpus/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateCorpus",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CreateCorpus",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateCorpusRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CreateCorpusOperation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CreateCorpus",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.CreateCorpus",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 58,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CreateDataSchema_sync",
      "title": "visionai CreateDataSchema Sample",
      "description": "CreateDataSchema creates data schema inside corpus.",
      "file": "WarehouseClient/CreateDataSchema/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateDataSchema",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CreateDataSchema",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateDataSchemaRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.DataSchema",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CreateDataSchema",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.CreateDataSchema",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_CreateSearchConfig_sync",
      "title": "visionai CreateSearchConfig Sample",
      "description": "CreateSearchConfig creates a search configuration inside a corpus.\n\nPlease follow the rules below to create a valid CreateSearchConfigRequest.\n--- General Rules ---\n1. Request.search_config_id must not be associated with an existing\nSearchConfig.\n2. Request must contain at least one non-empty search_criteria_property or\nfacet_property.\n3. mapped_fields must not be empty, and must map to existing UGA keys.\n4. All mapped_fields must be of the same type.\n5. All mapped_fields must share the same granularity.\n6. All mapped_fields must share the same semantic SearchConfig match\noptions.\nFor property-specific rules, please reference the comments for\nFacetProperty and SearchCriteriaProperty.",
      "file": "WarehouseClient/CreateSearchConfig/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateSearchConfig",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.CreateSearchConfig",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.CreateSearchConfigRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.SearchConfig",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "CreateSearchConfig",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.CreateSearchConfig",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteAnnotation_sync",
      "title": "visionai DeleteAnnotation Sample",
      "description": "DeleteAnnotation deletes annotation inside asset.",
      "file": "WarehouseClient/DeleteAnnotation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteAnnotation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteAnnotation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteAnnotationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteAnnotation",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.DeleteAnnotation",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteAsset_sync",
      "title": "visionai DeleteAsset Sample",
      "description": "DeleteAsset deletes asset inside corpus.",
      "file": "WarehouseClient/DeleteAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteAssetRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DeleteAssetOperation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.DeleteAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 56,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteCorpus_sync",
      "title": "visionai DeleteCorpus Sample",
      "description": "DeleteCorpus deletes a corpus only if its empty.\nReturns empty response.",
      "file": "WarehouseClient/DeleteCorpus/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteCorpus",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteCorpus",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteCorpusRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteCorpus",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.DeleteCorpus",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteDataSchema_sync",
      "title": "visionai DeleteDataSchema Sample",
      "description": "DeleteDataSchema deletes data schema inside corpus.",
      "file": "WarehouseClient/DeleteDataSchema/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteDataSchema",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteDataSchema",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteDataSchemaRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteDataSchema",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.DeleteDataSchema",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteOperation_sync",
      "title": "visionai DeleteOperation Sample",
      "description": "DeleteOperation is a utility method from google.longrunning.Operations.",
      "file": "WarehouseClient/DeleteOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteOperation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.DeleteOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteOperation",
          "fullName": "google.longrunning.Operations.DeleteOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_DeleteSearchConfig_sync",
      "title": "visionai DeleteSearchConfig Sample",
      "description": "DeleteSearchConfig deletes a search configuration inside a corpus.\n\nFor a DeleteSearchConfigRequest to be valid,\nRequest.search_configuration.name must already exist.",
      "file": "WarehouseClient/DeleteSearchConfig/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteSearchConfig",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.DeleteSearchConfig",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.DeleteSearchConfigRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "DeleteSearchConfig",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.DeleteSearchConfig",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GenerateHlsUri_sync",
      "title": "visionai GenerateHlsUri Sample",
      "description": "GenerateHlsUri generates a uri for an HLS manifest. The api takes in a collection of time\nranges, and generates a URI for an HLS manifest that covers all the\nrequested time ranges.",
      "file": "WarehouseClient/GenerateHlsUri/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GenerateHlsUri",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GenerateHlsUri",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GenerateHlsUriRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.GenerateHlsUriResponse",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GenerateHlsUri",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GenerateHlsUri",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetAnnotation_sync",
      "title": "visionai GetAnnotation Sample",
      "description": "GetAnnotation reads annotation inside asset.",
      "file": "WarehouseClient/GetAnnotation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetAnnotation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetAnnotation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetAnnotationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Annotation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetAnnotation",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GetAnnotation",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetAsset_sync",
      "title": "visionai GetAsset Sample",
      "description": "GetAsset reads an asset inside corpus.",
      "file": "WarehouseClient/GetAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetAssetRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Asset",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GetAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetCorpus_sync",
      "title": "visionai GetCorpus Sample",
      "description": "GetCorpus gets corpus details inside a project.",
      "file": "WarehouseClient/GetCorpus/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetCorpus",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetCorpus",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetCorpusRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Corpus",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetCorpus",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GetCorpus",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetDataSchema_sync",
      "title": "visionai GetDataSchema Sample",
      "description": "GetDataSchema gets data schema inside corpus.",
      "file": "WarehouseClient/GetDataSchema/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetDataSchema",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetDataSchema",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetDataSchemaRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.DataSchema",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetDataSchema",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GetDataSchema",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetIamPolicy_sync",
      "title": "visionai GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a resource. Returns an empty policy\nif the resource exists and does not have a policy set.",
      "file": "WarehouseClient/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.GetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetLocation_sync",
      "title": "visionai GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "WarehouseClient/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetOperation_sync",
      "title": "visionai GetOperation Sample",
      "description": "GetOperation is a utility method from google.longrunning.Operations.",
      "file": "WarehouseClient/GetOperation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetOperation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetOperation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.GetOperationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*longrunningpb.Operation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetOperation",
          "fullName": "google.longrunning.Operations.GetOperation",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_GetSearchConfig_sync",
      "title": "visionai GetSearchConfig Sample",
      "description": "GetSearchConfig gets a search configuration inside a corpus.",
      "file": "WarehouseClient/GetSearchConfig/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetSearchConfig",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.GetSearchConfig",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.GetSearchConfigRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.SearchConfig",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "GetSearchConfig",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.GetSearchConfig",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_IngestAsset_sync",
      "title": "visionai IngestAsset Sample",
      "description": "IngestAsset ingests data for the asset. It is not allowed to ingest a data chunk which\nis already expired according to TTL.\nThis method is only available via the gRPC API (not HTTP since\nbi-directional streaming is not supported via HTTP).\n\n\nThis method is not supported for the REST transport.",
      "file": "WarehouseClient/IngestAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "IngestAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.IngestAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "visionaipb.Warehouse_IngestAssetClient",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "IngestAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.IngestAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 69,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListAnnotations_sync",
      "title": "visionai ListAnnotations Sample",
      "description": "ListAnnotations lists a list of annotations inside asset.",
      "file": "WarehouseClient/ListAnnotations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListAnnotations",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListAnnotations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListAnnotationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "AnnotationIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListAnnotations",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ListAnnotations",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListAssets_sync",
      "title": "visionai ListAssets Sample",
      "description": "ListAssets lists an list of assets inside corpus.",
      "file": "WarehouseClient/ListAssets/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListAssets",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListAssets",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListAssetsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "AssetIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListAssets",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ListAssets",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListCorpora_sync",
      "title": "visionai ListCorpora Sample",
      "description": "ListCorpora lists all corpora in a project.",
      "file": "WarehouseClient/ListCorpora/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListCorpora",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListCorpora",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListCorporaRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "CorpusIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListCorpora",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ListCorpora",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListDataSchemas_sync",
      "title": "visionai ListDataSchemas Sample",
      "description": "ListDataSchemas lists a list of data schemas inside corpus.",
      "file": "WarehouseClient/ListDataSchemas/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListDataSchemas",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListDataSchemas",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListDataSchemasRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "DataSchemaIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListDataSchemas",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ListDataSchemas",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListLocations_sync",
      "title": "visionai ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "WarehouseClient/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListOperations_sync",
      "title": "visionai ListOperations Sample",
      "description": "ListOperations is a utility method from google.longrunning.Operations.",
      "file": "WarehouseClient/ListOperations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListOperations",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListOperations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "longrunningpb.ListOperationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "OperationIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListOperations",
          "fullName": "google.longrunning.Operations.ListOperations",
          "service": {
            "shortName": "Operations",
            "fullName": "google.longrunning.Operations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_ListSearchConfigs_sync",
      "title": "visionai ListSearchConfigs Sample",
      "description": "ListSearchConfigs lists all search configurations inside a corpus.",
      "file": "WarehouseClient/ListSearchConfigs/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListSearchConfigs",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.ListSearchConfigs",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.ListSearchConfigsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "SearchConfigIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "ListSearchConfigs",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.ListSearchConfigs",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_SearchAssets_sync",
      "title": "visionai SearchAssets Sample",
      "description": "SearchAssets search media asset.",
      "file": "WarehouseClient/SearchAssets/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SearchAssets",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.SearchAssets",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.SearchAssetsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "SearchResultItemIterator",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "SearchAssets",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.SearchAssets",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 66,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_SetIamPolicy_sync",
      "title": "visionai SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy on the specified resource. Replaces\nany existing policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\nerrors.",
      "file": "WarehouseClient/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.iam.v1.IAMPolicy.SetIamPolicy",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_TestIamPermissions_sync",
      "title": "visionai TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on the specified resource. If the\nresource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for authorization\nchecking. This operation may \"fail open\" without warning.",
      "file": "WarehouseClient/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.iam.v1.IAMPolicy.TestIamPermissions",
          "service": {
            "shortName": "IAMPolicy",
            "fullName": "google.iam.v1.IAMPolicy"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_UpdateAnnotation_sync",
      "title": "visionai UpdateAnnotation Sample",
      "description": "UpdateAnnotation updates annotation inside asset.",
      "file": "WarehouseClient/UpdateAnnotation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateAnnotation",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.UpdateAnnotation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateAnnotationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Annotation",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "UpdateAnnotation",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.UpdateAnnotation",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_UpdateAsset_sync",
      "title": "visionai UpdateAsset Sample",
      "description": "UpdateAsset updates an asset inside corpus.",
      "file": "WarehouseClient/UpdateAsset/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateAsset",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.UpdateAsset",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateAssetRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Asset",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "UpdateAsset",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.UpdateAsset",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_UpdateCorpus_sync",
      "title": "visionai UpdateCorpus Sample",
      "description": "UpdateCorpus updates a corpus in a project.",
      "file": "WarehouseClient/UpdateCorpus/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateCorpus",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.UpdateCorpus",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateCorpusRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.Corpus",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "UpdateCorpus",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.UpdateCorpus",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_UpdateDataSchema_sync",
      "title": "visionai UpdateDataSchema Sample",
      "description": "UpdateDataSchema updates data schema inside corpus.",
      "file": "WarehouseClient/UpdateDataSchema/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateDataSchema",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.UpdateDataSchema",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateDataSchemaRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.DataSchema",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "UpdateDataSchema",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.UpdateDataSchema",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "visionai_v1alpha1_generated_Warehouse_UpdateSearchConfig_sync",
      "title": "visionai UpdateSearchConfig Sample",
      "description": "UpdateSearchConfig updates a search configuration inside a corpus.\n\nPlease follow the rules below to create a valid UpdateSearchConfigRequest.\n--- General Rules ---\n1. Request.search_configuration.name must already exist.\n2. Request must contain at least one non-empty search_criteria_property or\nfacet_property.\n3. mapped_fields must not be empty, and must map to existing UGA keys.\n4. All mapped_fields must be of the same type.\n5. All mapped_fields must share the same granularity.\n6. All mapped_fields must share the same semantic SearchConfig match\noptions.\nFor property-specific rules, please reference the comments for\nFacetProperty and SearchCriteriaProperty.",
      "file": "WarehouseClient/UpdateSearchConfig/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateSearchConfig",
        "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient.UpdateSearchConfig",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "visionaipb.UpdateSearchConfigRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*visionaipb.SearchConfig",
        "client": {
          "shortName": "WarehouseClient",
          "fullName": "google.cloud.visionai.v1alpha1.WarehouseClient"
        },
        "method": {
          "shortName": "UpdateSearchConfig",
          "fullName": "google.cloud.visionai.v1alpha1.Warehouse.UpdateSearchConfig",
          "service": {
            "shortName": "Warehouse",
            "fullName": "google.cloud.visionai.v1alpha1.Warehouse"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    }
  ]
}