// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: google/cloud/backupdr/logging/v1/bdr_log.proto

package loggingpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Log entry for Backup and Restore Job for resources using BackupPlan based
// protection.
type BDRBackupRestoreJobLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The job_id field displays the identifier of the job being logged.
	JobId *string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3,oneof" json:"job_id,omitempty"`
	// The category field displays the category of the job.
	JobCategory *string `protobuf:"bytes,2,opt,name=job_category,json=jobCategory,proto3,oneof" json:"job_category,omitempty"`
	// The status field displays the status of the job.
	JobStatus *string `protobuf:"bytes,3,opt,name=job_status,json=jobStatus,proto3,oneof" json:"job_status,omitempty"`
	// Full resource name of the protected resource.
	SourceResourceName *string `protobuf:"bytes,4,opt,name=source_resource_name,json=sourceResourceName,proto3,oneof" json:"source_resource_name,omitempty"`
	// The source resource ID.
	SourceResourceId *string `protobuf:"bytes,5,opt,name=source_resource_id,json=sourceResourceId,proto3,oneof" json:"source_resource_id,omitempty"`
	// Full resource name of the restore resource. Only populated in
	// restore jobs.
	RestoreResourceName *string `protobuf:"bytes,6,opt,name=restore_resource_name,json=restoreResourceName,proto3,oneof" json:"restore_resource_name,omitempty"`
	// Full resource name of the backup created in backup jobs and used in restore
	// jobs.
	BackupName *string `protobuf:"bytes,7,opt,name=backup_name,json=backupName,proto3,oneof" json:"backup_name,omitempty"`
	// The resource_type field displays the type of the protected resource.
	ResourceType *string `protobuf:"bytes,8,opt,name=resource_type,json=resourceType,proto3,oneof" json:"resource_type,omitempty"`
	// Start time of the job.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	// End time of the job.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	// Full resource name for Backup Plan of the job. Only populated for Scheduled
	// Backup and Adhoc Backup.
	BackupPlanName *string `protobuf:"bytes,11,opt,name=backup_plan_name,json=backupPlanName,proto3,oneof" json:"backup_plan_name,omitempty"`
	// Name of the backup rule. Only populated for Scheduled Backup and Adhoc
	// Backup.
	BackupRule *string `protobuf:"bytes,12,opt,name=backup_rule,json=backupRule,proto3,oneof" json:"backup_rule,omitempty"`
	// Full resource name backup vault name
	BackupVaultName *string `protobuf:"bytes,13,opt,name=backup_vault_name,json=backupVaultName,proto3,oneof" json:"backup_vault_name,omitempty"`
	// The amount of incremental backup data copied.
	IncrementalBackupSizeGib *float64 `protobuf:"fixed64,14,opt,name=incremental_backup_size_gib,json=incrementalBackupSizeGib,proto3,oneof" json:"incremental_backup_size_gib,omitempty"`
	// The error code. Only populated in error scenarios.
	ErrorCode *int32 `protobuf:"varint,15,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	// The name of the error type eg. PERMISSION_DENIED. Only populated in error
	// scenarios.
	ErrorType *string `protobuf:"bytes,16,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	// The user readable error message. Only populated in error scenarios.
	ErrorMessage *string `protobuf:"bytes,17,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
}

func (x *BDRBackupRestoreJobLog) Reset() {
	*x = BDRBackupRestoreJobLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BDRBackupRestoreJobLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BDRBackupRestoreJobLog) ProtoMessage() {}

func (x *BDRBackupRestoreJobLog) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BDRBackupRestoreJobLog.ProtoReflect.Descriptor instead.
func (*BDRBackupRestoreJobLog) Descriptor() ([]byte, []int) {
	return file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescGZIP(), []int{0}
}

func (x *BDRBackupRestoreJobLog) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetJobCategory() string {
	if x != nil && x.JobCategory != nil {
		return *x.JobCategory
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetSourceResourceName() string {
	if x != nil && x.SourceResourceName != nil {
		return *x.SourceResourceName
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetSourceResourceId() string {
	if x != nil && x.SourceResourceId != nil {
		return *x.SourceResourceId
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetRestoreResourceName() string {
	if x != nil && x.RestoreResourceName != nil {
		return *x.RestoreResourceName
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetBackupName() string {
	if x != nil && x.BackupName != nil {
		return *x.BackupName
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BDRBackupRestoreJobLog) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *BDRBackupRestoreJobLog) GetBackupPlanName() string {
	if x != nil && x.BackupPlanName != nil {
		return *x.BackupPlanName
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetBackupRule() string {
	if x != nil && x.BackupRule != nil {
		return *x.BackupRule
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetBackupVaultName() string {
	if x != nil && x.BackupVaultName != nil {
		return *x.BackupVaultName
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetIncrementalBackupSizeGib() float64 {
	if x != nil && x.IncrementalBackupSizeGib != nil {
		return *x.IncrementalBackupSizeGib
	}
	return 0
}

func (x *BDRBackupRestoreJobLog) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *BDRBackupRestoreJobLog) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *BDRBackupRestoreJobLog) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

var File_google_cloud_backupdr_logging_v1_bdr_log_proto protoreflect.FileDescriptor

var file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x64, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x64, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x64, 0x72, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x08, 0x0a, 0x16, 0x42, 0x44, 0x52, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x12, 0x1a,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6a, 0x6f,
	0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x37, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x13, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x08, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x1b, 0x69,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x69, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x0d, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x69, 0x62, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x17, 0x0a, 0x15,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x1e, 0x0a, 0x1c, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x69, 0x62, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x42, 0x50, 0x01, 0x5a, 0x3e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x64,
	0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x3b, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescOnce sync.Once
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescData = file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDesc
)

func file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescGZIP() []byte {
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescOnce.Do(func() {
		file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescData)
	})
	return file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDescData
}

var file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_cloud_backupdr_logging_v1_bdr_log_proto_goTypes = []any{
	(*BDRBackupRestoreJobLog)(nil), // 0: google.cloud.backupdr.logging.v1.BDRBackupRestoreJobLog
	(*timestamppb.Timestamp)(nil),  // 1: google.protobuf.Timestamp
}
var file_google_cloud_backupdr_logging_v1_bdr_log_proto_depIdxs = []int32{
	1, // 0: google.cloud.backupdr.logging.v1.BDRBackupRestoreJobLog.start_time:type_name -> google.protobuf.Timestamp
	1, // 1: google.cloud.backupdr.logging.v1.BDRBackupRestoreJobLog.end_time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_cloud_backupdr_logging_v1_bdr_log_proto_init() }
func file_google_cloud_backupdr_logging_v1_bdr_log_proto_init() {
	if File_google_cloud_backupdr_logging_v1_bdr_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BDRBackupRestoreJobLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_backupdr_logging_v1_bdr_log_proto_goTypes,
		DependencyIndexes: file_google_cloud_backupdr_logging_v1_bdr_log_proto_depIdxs,
		MessageInfos:      file_google_cloud_backupdr_logging_v1_bdr_log_proto_msgTypes,
	}.Build()
	File_google_cloud_backupdr_logging_v1_bdr_log_proto = out.File
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_rawDesc = nil
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_goTypes = nil
	file_google_cloud_backupdr_logging_v1_bdr_log_proto_depIdxs = nil
}
